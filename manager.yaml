apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: operations.operator.kubeadm.x-k8s.io
spec:
  group: operator.kubeadm.x-k8s.io
  names:
    categories:
    - kubeadm-operator
    kind: Operation
    listKind: OperationList
    plural: operations
    singular: operation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.groups
      name: Groups
      type: integer
    - jsonPath: .status.succeededGroups
      name: Succeeded
      type: integer
    - jsonPath: .status.failedGroups
      name: Failed
      type: integer
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Operation is the Schema for the operations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OperationSpec defines the spec of an Operation to be performed
              by the kubeadm-operator. Please note that once the operation will be
              completed, the operator will stop to reconcile on any instance of this
              object.
            properties:
              custom:
                description: CustomOperation enable definition of custom list of RuntimeTaskGroup.
                properties:
                  workflow:
                    description: Workflow allows to define a custom list of RuntimeTaskGroup.
                    items:
                      description: RuntimeTaskGroup is the Schema for the runtimetaskgroups
                        API
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        metadata:
                          type: object
                        spec:
                          description: RuntimeTaskGroupSpec defines the RuntimeTask
                            template that applies to a group of nodes that should
                            be changed as part of an Operation. Please note that this
                            is a runtime object, create with the goal to allow ensure
                            orchestration of operation RuntimeTasks/Commands, and
                            that this object will be deleted immediately after the
                            operation completes. Users can refer to this object only
                            in case of errors/for problem investigation.
                          properties:
                            createStrategy:
                              description: CreateStrategy indicates how the controller
                                should handle RuntimeTask creation for this RuntimeTaskGroup.
                                If missing, sequential mode will be used.
                              type: string
                            nodeFilter:
                              description: NodeFilter allows to filter the list of
                                nodes returned by the node selector. It defaults to
                                all.
                              type: string
                            nodeSelector:
                              description: 'NodeSelector is a label query that identifies
                                the list of nodes that should be impacted by this
                                RuntimeTaskGroup. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            selector:
                              description: 'Selector is a label query over RuntimeTasks
                                that are generated by this RuntimeTaskGroup. Label
                                keys and values that must match in order to be controlled
                                by this RuntimeTaskGroup. It must match the RuntimeTask
                                template''s labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            template:
                              description: Template is the object that describes the
                                RuntimeTask that will be created if insufficient replicas
                                are detected.
                              properties:
                                metadata:
                                  description: 'Standard object''s metadata. More
                                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                                  type: object
                                spec:
                                  description: 'Specification of the desired behavior
                                    of the RuntimeTask. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                  properties:
                                    commands:
                                      description: Commands provide the list of commands
                                        to be performed when executing a RuntimeTask
                                        on a node
                                      items:
                                        description: CommandDescriptor represents
                                          a command to be performed. Only one of its
                                          members may be specified.
                                        properties:
                                          fail:
                                            description: Fail provide a dummy command
                                              for testing the kubeadm-operator workflow.
                                            type: object
                                          kubeadmRenewCertificates:
                                            description: KubeadmRenewCertsCommandSpec
                                              provides...
                                            type: object
                                          kubeadmUpgradeApply:
                                            description: KubeadmUpgradeApplyCommandSpec
                                              provides...
                                            type: object
                                          kubeadmUpgradeNode:
                                            description: KubeadmUpgradeNodeCommandSpec
                                              provides...
                                            type: object
                                          kubectlDrain:
                                            description: KubectlDrainCommandSpec provides...
                                            type: object
                                          kubectlUncordon:
                                            description: KubectlUncordonCommandSpec
                                              provides...
                                            type: object
                                          pass:
                                            description: Pass provide a dummy command
                                              for testing the kubeadm-operator workflow.
                                            type: object
                                          preflight:
                                            description: PreflightCommandSpec provides...
                                            type: object
                                          upgradeKubeadm:
                                            description: UpgradeKubeadmCommandSpec
                                              provides...
                                            type: object
                                          upgradeKubeletAndKubeactl:
                                            description: UpgradeKubeletAndKubeactlCommandSpec
                                              provides...
                                            type: object
                                          wait:
                                            description: Wait pauses the execution
                                              on the next command for a given number
                                              of seconds.
                                            properties:
                                              seconds:
                                                description: Seconds to pause before
                                                  next command.
                                                format: int32
                                                type: integer
                                            type: object
                                        type: object
                                      type: array
                                    nodeName:
                                      description: NodeName is a request to schedule
                                        this RuntimeTask onto a specific node.
                                      type: string
                                    recoveryMode:
                                      description: RecoveryMode sets the strategy
                                        to use when a command is failed.
                                      type: string
                                  required:
                                  - commands
                                  type: object
                              type: object
                          type: object
                        status:
                          description: RuntimeTaskGroupStatus defines the observed
                            state of RuntimeTaskGroup
                          properties:
                            completionTime:
                              description: CompletionTime represents time when the
                                RuntimeTaskGroup was completed. It is represented
                                in RFC3339 form and is in UTC.
                              format: date-time
                              type: string
                            errorMessage:
                              description: ErrorMessage will be set in the event that
                                there is a problem in executing one of the RuntimeTaskGroup's
                                RuntimeTasks and will contain a more verbose string
                                suitable for logging and human consumption.
                              type: string
                            errorReason:
                              description: ErrorReason will be set in the event that
                                there is a problem in executing one of the RuntimeTaskGroup's
                                RuntimeTasks and will contain a succinct value suitable
                                for machine interpretation.
                              type: string
                            failedNodes:
                              description: FailedNodes
                              format: int32
                              type: integer
                            invalidNodes:
                              description: InvalidNodes
                              format: int32
                              type: integer
                            nodes:
                              description: Nodes
                              format: int32
                              type: integer
                            paused:
                              description: Paused indicates that the RuntimeTaskGroup
                                is currently paused. This fields is set when the OperationSpec.Paused
                                value is processed by the controller.
                              type: boolean
                            phase:
                              description: Phase represents the current phase of RuntimeTaskGroup
                                actuation. E.g. pending, running, succeeded, failed
                                etc.
                              type: string
                            runningNodes:
                              description: RunningNodes
                              format: int32
                              type: integer
                            startTime:
                              description: StartTime represents time when the RuntimeTaskGroup
                                execution was started by the controller. It is represented
                                in RFC3339 form and is in UTC.
                              format: date-time
                              type: string
                            succeededNodes:
                              description: SucceededNodes
                              format: int32
                              type: integer
                          type: object
                      type: object
                    type: array
                required:
                - workflow
                type: object
              executionMode:
                description: ExecutionMode indicates how the controller should handle
                  RuntimeTask/Command execution for this operation. If missing, auto
                  mode will be used.
                type: string
              paused:
                description: Paused indicates that the operation is paused.
                type: boolean
              renewCertificates:
                description: RenewCertificates provide declarative support for the
                  kubeadm upgrade workflow.
                type: object
              upgrade:
                description: Upgrade provide declarative support for the kubeadm upgrade
                  workflow.
                properties:
                  kubernetesVersion:
                    description: KubernetesVersion specifies the target kubernetes
                      version
                    type: string
                required:
                - kubernetesVersion
                type: object
            type: object
          status:
            description: OperationStatus defines the observed state of Operation
            properties:
              completionTime:
                description: CompletionTime represents time when the Operation was
                  completed. It is represented in RFC3339 form and is in UTC.
                format: date-time
                type: string
              errorMessage:
                description: ErrorMessage will be set in the event that there is a
                  problem in executing one of the Operation's RuntimeTasks and will
                  contain a more verbose string suitable for logging and human consumption.
                type: string
              errorReason:
                description: ErrorReason will be set in the event that there is a
                  problem in executing one of the Operation's RuntimeTasks and will
                  contain a succinct value suitable for machine interpretation.
                type: string
              failedGroups:
                description: FailedGroups return the number of RuntimeTaskGroups with
                  at least one RuntimeTask failure
                format: int32
                type: integer
              groups:
                description: Groups returns the number of RuntimeTaskGroups belonging
                  to this operation.
                format: int32
                type: integer
              invalidGroups:
                description: InvalidGroups return the number of RuntimeTaskGroups
                  with at least one RuntimeTask inconsistencies like e.g. orphans
                format: int32
                type: integer
              paused:
                description: Paused indicates that the Operation is paused. This fields
                  is set when the OperationSpec.Paused value is processed by the controller.
                type: boolean
              phase:
                description: Phase represents the current phase of Operation actuation.
                  E.g. pending, running, succeeded, failed etc.
                type: string
              runningGroups:
                description: RunningGroups
                format: int32
                type: integer
              startTime:
                description: StartTime represents time when the Operation execution
                  was started by the controller. It is represented in RFC3339 form
                  and is in UTC.
                format: date-time
                type: string
              succeededGroups:
                description: SucceededGroups return the number of RuntimeTaskGroups
                  where all the RuntimeTask succeeded
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: runtimetaskgroups.operator.kubeadm.x-k8s.io
spec:
  group: operator.kubeadm.x-k8s.io
  names:
    categories:
    - kubeadm-operator
    kind: RuntimeTaskGroup
    listKind: RuntimeTaskGroupList
    plural: runtimetaskgroups
    singular: runtimetaskgroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.nodes
      name: Nodes
      type: integer
    - jsonPath: .status.succeededNodes
      name: Succeeded
      type: integer
    - jsonPath: .status.failedNodes
      name: Failed
      type: integer
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RuntimeTaskGroup is the Schema for the runtimetaskgroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RuntimeTaskGroupSpec defines the RuntimeTask template that
              applies to a group of nodes that should be changed as part of an Operation.
              Please note that this is a runtime object, create with the goal to allow
              ensure orchestration of operation RuntimeTasks/Commands, and that this
              object will be deleted immediately after the operation completes. Users
              can refer to this object only in case of errors/for problem investigation.
            properties:
              createStrategy:
                description: CreateStrategy indicates how the controller should handle
                  RuntimeTask creation for this RuntimeTaskGroup. If missing, sequential
                  mode will be used.
                type: string
              nodeFilter:
                description: NodeFilter allows to filter the list of nodes returned
                  by the node selector. It defaults to all.
                type: string
              nodeSelector:
                description: 'NodeSelector is a label query that identifies the list
                  of nodes that should be impacted by this RuntimeTaskGroup. More
                  info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              selector:
                description: 'Selector is a label query over RuntimeTasks that are
                  generated by this RuntimeTaskGroup. Label keys and values that must
                  match in order to be controlled by this RuntimeTaskGroup. It must
                  match the RuntimeTask template''s labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              template:
                description: Template is the object that describes the RuntimeTask
                  that will be created if insufficient replicas are detected.
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                    type: object
                  spec:
                    description: 'Specification of the desired behavior of the RuntimeTask.
                      More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                    properties:
                      commands:
                        description: Commands provide the list of commands to be performed
                          when executing a RuntimeTask on a node
                        items:
                          description: CommandDescriptor represents a command to be
                            performed. Only one of its members may be specified.
                          properties:
                            fail:
                              description: Fail provide a dummy command for testing
                                the kubeadm-operator workflow.
                              type: object
                            kubeadmRenewCertificates:
                              description: KubeadmRenewCertsCommandSpec provides...
                              type: object
                            kubeadmUpgradeApply:
                              description: KubeadmUpgradeApplyCommandSpec provides...
                              type: object
                            kubeadmUpgradeNode:
                              description: KubeadmUpgradeNodeCommandSpec provides...
                              type: object
                            kubectlDrain:
                              description: KubectlDrainCommandSpec provides...
                              type: object
                            kubectlUncordon:
                              description: KubectlUncordonCommandSpec provides...
                              type: object
                            pass:
                              description: Pass provide a dummy command for testing
                                the kubeadm-operator workflow.
                              type: object
                            preflight:
                              description: PreflightCommandSpec provides...
                              type: object
                            upgradeKubeadm:
                              description: UpgradeKubeadmCommandSpec provides...
                              type: object
                            upgradeKubeletAndKubeactl:
                              description: UpgradeKubeletAndKubeactlCommandSpec provides...
                              type: object
                            wait:
                              description: Wait pauses the execution on the next command
                                for a given number of seconds.
                              properties:
                                seconds:
                                  description: Seconds to pause before next command.
                                  format: int32
                                  type: integer
                              type: object
                          type: object
                        type: array
                      nodeName:
                        description: NodeName is a request to schedule this RuntimeTask
                          onto a specific node.
                        type: string
                      recoveryMode:
                        description: RecoveryMode sets the strategy to use when a
                          command is failed.
                        type: string
                    required:
                    - commands
                    type: object
                type: object
            type: object
          status:
            description: RuntimeTaskGroupStatus defines the observed state of RuntimeTaskGroup
            properties:
              completionTime:
                description: CompletionTime represents time when the RuntimeTaskGroup
                  was completed. It is represented in RFC3339 form and is in UTC.
                format: date-time
                type: string
              errorMessage:
                description: ErrorMessage will be set in the event that there is a
                  problem in executing one of the RuntimeTaskGroup's RuntimeTasks
                  and will contain a more verbose string suitable for logging and
                  human consumption.
                type: string
              errorReason:
                description: ErrorReason will be set in the event that there is a
                  problem in executing one of the RuntimeTaskGroup's RuntimeTasks
                  and will contain a succinct value suitable for machine interpretation.
                type: string
              failedNodes:
                description: FailedNodes
                format: int32
                type: integer
              invalidNodes:
                description: InvalidNodes
                format: int32
                type: integer
              nodes:
                description: Nodes
                format: int32
                type: integer
              paused:
                description: Paused indicates that the RuntimeTaskGroup is currently
                  paused. This fields is set when the OperationSpec.Paused value is
                  processed by the controller.
                type: boolean
              phase:
                description: Phase represents the current phase of RuntimeTaskGroup
                  actuation. E.g. pending, running, succeeded, failed etc.
                type: string
              runningNodes:
                description: RunningNodes
                format: int32
                type: integer
              startTime:
                description: StartTime represents time when the RuntimeTaskGroup execution
                  was started by the controller. It is represented in RFC3339 form
                  and is in UTC.
                format: date-time
                type: string
              succeededNodes:
                description: SucceededNodes
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: runtimetasks.operator.kubeadm.x-k8s.io
spec:
  group: operator.kubeadm.x-k8s.io
  names:
    categories:
    - kubeadm-operator
    kind: RuntimeTask
    listKind: RuntimeTaskList
    plural: runtimetasks
    singular: runtimetask
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.startTime
      name: StartTime
      type: date
    - jsonPath: .status.commandProgress
      name: Command
      type: string
    - jsonPath: .status.completionTime
      name: CompletionTime
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RuntimeTask is the Schema for the runtimetasks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RuntimeTaskSpec defines the desired state of RuntimeTask
            properties:
              commands:
                description: Commands provide the list of commands to be performed
                  when executing a RuntimeTask on a node
                items:
                  description: CommandDescriptor represents a command to be performed.
                    Only one of its members may be specified.
                  properties:
                    fail:
                      description: Fail provide a dummy command for testing the kubeadm-operator
                        workflow.
                      type: object
                    kubeadmRenewCertificates:
                      description: KubeadmRenewCertsCommandSpec provides...
                      type: object
                    kubeadmUpgradeApply:
                      description: KubeadmUpgradeApplyCommandSpec provides...
                      type: object
                    kubeadmUpgradeNode:
                      description: KubeadmUpgradeNodeCommandSpec provides...
                      type: object
                    kubectlDrain:
                      description: KubectlDrainCommandSpec provides...
                      type: object
                    kubectlUncordon:
                      description: KubectlUncordonCommandSpec provides...
                      type: object
                    pass:
                      description: Pass provide a dummy command for testing the kubeadm-operator
                        workflow.
                      type: object
                    preflight:
                      description: PreflightCommandSpec provides...
                      type: object
                    upgradeKubeadm:
                      description: UpgradeKubeadmCommandSpec provides...
                      type: object
                    upgradeKubeletAndKubeactl:
                      description: UpgradeKubeletAndKubeactlCommandSpec provides...
                      type: object
                    wait:
                      description: Wait pauses the execution on the next command for
                        a given number of seconds.
                      properties:
                        seconds:
                          description: Seconds to pause before next command.
                          format: int32
                          type: integer
                      type: object
                  type: object
                type: array
              nodeName:
                description: NodeName is a request to schedule this RuntimeTask onto
                  a specific node.
                type: string
              recoveryMode:
                description: RecoveryMode sets the strategy to use when a command
                  is failed.
                type: string
            required:
            - commands
            type: object
          status:
            description: RuntimeTaskStatus defines the observed state of RuntimeTask
            properties:
              commandProgress:
                description: CommandProgress Please note that this field is only for
                  allowing a better visal representation of status
                type: string
              completionTime:
                description: CompletionTime represents time when the RuntimeTask was
                  completed. It is represented in RFC3339 form and is in UTC.
                format: date-time
                type: string
              currentCommand:
                description: CurrentCommand
                format: int32
                type: integer
              errorMessage:
                description: ErrorMessage will be set in the event that there is a
                  problem in executing the RuntimeTasks and will contain a more verbose
                  string suitable for logging and human consumption.
                type: string
              errorReason:
                description: ErrorReason will be set in the event that there is a
                  problem in executing the RuntimeTasks and will contain a succinct
                  value suitable for machine interpretation.
                type: string
              paused:
                description: Paused indicates that the RuntimeTask is paused.
                type: boolean
              phase:
                description: Phase represents the current phase of RuntimeTask actuation.
                  E.g. Pending, Running, Completed, Failed etc.
                type: string
              startTime:
                description: StartTime represents time when the RuntimeTask execution
                  was started by the controller. It is represented in RFC3339 form
                  and is in UTC.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: operator-leader-election-role
  namespace: operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: operator-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operator.kubeadm.x-k8s.io
  resources:
  - operations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.kubeadm.x-k8s.io
  resources:
  - operations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.kubeadm.x-k8s.io
  resources:
  - runtimetaskgroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.kubeadm.x-k8s.io
  resources:
  - runtimetaskgroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.kubeadm.x-k8s.io
  resources:
  - runtimetasks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.kubeadm.x-k8s.io
  resources:
  - runtimetasks/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: operator-leader-election-rolebinding
  namespace: operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: operator-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
  name: operator-controller-manager-metrics-service
  namespace: operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: operator-controller-manager
  namespace: operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: jungler/controller:latest
        imagePullPolicy: IfNotPresent
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
